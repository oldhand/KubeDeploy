---
- name: 创建临时目录存放镜像
  file:
    path: "/tmp/images"
    state: directory
    mode: '0755'

- name: 检查镜像文件是否存在
  stat:
    path: "{{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/prom_prometheus_v3.6.0.tar"
  register: target_tar_stat
  run_once: true

- name: 合并分卷并解压生成所有镜像文件
  shell: |
    # 合并分卷为完整zip文件
    cat {{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/images.zip.001 \
        {{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/images.zip.002 \
        {{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/images.zip.003 \
        {{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/images.zip.004 \
        > {{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/images.zip
    
    # 解压zip到目标目录（确保tar直接生成在该目录）
    unzip -q -o {{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/images.zip \
          -d {{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/
    
    # 清理临时zip文件
    rm -f {{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/images.zip
  run_once: true  # 控制节点执行一次
  when: not target_tar_stat.stat.exists  # 仅tar不存在时执行


- name: 查找所有镜像（tar）文件
  ansible.builtin.find:
    path: "{{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}"
    patterns: '*.tar'
    recurse: no
  delegate_to: localhost
  register: tar_files
  run_once: true


- name: 复制镜像文件到目标节点
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/images/prometheus/{{ ansible_architecture }}/{{ item | basename }}"
    dest: "/tmp/images/{{ item | basename }}"
    mode: '0644'
  with_items: "{{ tar_files.files | map(attribute='path') | list }}"
  when: tar_files.files | length > 0  # 确保只在有文件时执行


- name: 加载镜像文件到 Docker
  shell: "docker load -i /tmp/images/{{ item | basename }}"
  with_items: "{{ tar_files.files | map(attribute='path') | list }}"
  when: tar_files.files | length > 0  # 确保只在有文件时执行

